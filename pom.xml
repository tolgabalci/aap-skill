<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.advancestores.enterprisecatalog</groupId>
    <artifactId>merch-catalog-pom-parent</artifactId>
    <version>0.2.0</version>
  </parent>
  <artifactId>alexa-order</artifactId>
  <groupId>com.advancestores.hackathon</groupId>
  <version>1.0-SNAPSHOT</version>
  <packaging>${project.packaging}</packaging>
  <name>Merchandising-Catalog-alexa-order Web Service</name>
  <description>alexa-order - TODO</description>

  <properties>
    <junit-platform.version>5.6.0</junit-platform.version>
    <mockito.version>3.3.3</mockito.version>
    <mockito-jupiter.version>3.1.0</mockito-jupiter.version>
    <pojotester.version>0.7.6</pojotester.version>
    <springdoc-openapi.version>1.3.9</springdoc-openapi.version>
    <avro.version>1.10.0</avro.version>
    <confluentkafka.version>5.3.0</confluentkafka.version>

    <sonar.exclusions>src/main/java/com/advancestores/enterprisecatalog/alexa-order/config/**/*, src/main/java/com/advancestores/enterprisecatalog/alexa-order/*Application.java</sonar.exclusions>
  </properties>

  <issueManagement>
    <system>JIRA</system>
    <url>https://advanceautoparts.atlassian.net/browse/EC</url>
  </issueManagement>

  <scm>
    <connection>scm:git:git://bitbucket.org/advanceauto/merch-catalog-alexa-order-service.git</connection>
    <developerConnection>scm:git:https://bitbucket.org/advanceauto/merch-catalog-alexa-order-service.git</developerConnection>
    <url>https://bitbucket.org/advanceauto/merch-catalog-alexa-order-service.git</url>
  </scm>

  <ciManagement>
    <system>Jenkins</system>
    <url>https://devops-jenkins-catalog.apps.amp01.shared.amp.aapaws/job/merch-catalog-alexa-order-service</url>
  </ciManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit-platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito-jupiter.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito.core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pl.pojo</groupId>
      <artifactId>pojo-tester</artifactId>
      <version>${pojotester.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>${springdoc-openapi.version}</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.9</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>${confluentkafka.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-schema-registry-client</artifactId>
      <version>${confluentkafka.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>common-config</artifactId>
      <version>${confluentkafka.version}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>${project.artifactId}</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>${avro.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.basedir}/src/main/resources/avro/</sourceDirectory>
              <includes>
                <include>CatalogSummaryMessage.avsc</include>
              </includes>
              <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

  <profiles>
    <!-- Only required if a service has to be deployed to on premise Jboss server. Otherwise remove the profile.-->
    <profile>
      <id>jboss</id>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
          <exclusions>
            <exclusion>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-tomcat</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>schema-register</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-maven-plugin</artifactId>
            <version>${confluentkafka.version}</version>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>register</goal>
                </goals>
                <configuration>
                  <schemaRegistryUrls>
                    <param></param>
                  </schemaRegistryUrls>
                  <userInfoConfig></userInfoConfig>
                  <subjects>
                    <occ-hackathon-value>src/main/resources/avro/CatalogSummaryMessage.avsc</occ-hackathon-value>
                  </subjects>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
